1.Как отказаться от изменений в файле (файлах) находящийся в рабочем
каталоге (work directory)?

cd /Users/admin/Documents/Toleran/GIT/GIT_070223
 git checkout . – вернуть все последние комиты – те все изменения после
последнего комита исчезнут
 или можно git checkout -- <file>.<file>

2.Как вернуть файл из индекса в рабочий каталог?
git reset -вернет все файлы из индекса
git reset <file> -  верне один файл 

эти команды отменяют индексацию но не отменяют изменения в файле
чтобы вернуть изменения которые были сделаны после индексации - то команда
с 1го пункта


3.Как отменить ошибочный commit ?

git reset HEAD~n – возращает в локальной репозитории на n шагов
назад комиты

если надо исправить уже запушенный комит
git revert HEAD –  откатывает на комит назад – после чего надо сделать
add
commit
push
– как для правильного

4.Как создать новую ветку и переключится в нее?
git branch test1  - создает новые ветки 
 
git checkout test1 – переключается на  test1 , 
 
git checkout -b test – создает и переключается на  test

5.В чем отличение между fast-forward merge  and non fast-forfard merge?

fast-forward merge
 - происходит , когда целевая ветка (в ветке, к которой происходит 
слияние) не имеет новых коммитов, сделанных после отделения от текущей 
ветки.
 Просто переставляете хеадер . Не создаются доп комиков слияния 
- При non fast-forfard merge -  обе ветки имеют новые кометы  и для 
слияния требуется участие автора и кометы слияния также нужны

6 Когда может возникнуть конфликт слияния веток, как  его разрешить?
Описал в 5м  Конфликт слияния веток возникает, когда Git не может 
автоматически объединить изменения из двух веток из-за конфликтующих 
изменений в одном и том же месте файла.
Когда возникает конфликт слияния веток, нужно разрешить его вручную
И сделать новый комит слияния 

7.Можно ли удалить ветку? Как?

git branch -d <branch>

Если ветка, которую вы хотите удалить, не была полностью слита с другими 
ветками, вы получите предупреждение. Если вы все равно хотите удалить 
ветку, используйте команду:
git branch -D <branch>

git push origin --delete <branch>

После выполнения этой команды удаленная ветка будет удалена из удаленного 
репозитория.

